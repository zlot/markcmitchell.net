"use strict";var precacheConfig=[["https://zlot.github.io/markcmitchell.net/index.html","d950840e9d616fdb0ecbb79d7b54c059"],["https://zlot.github.io/markcmitchell.net/static/css/main.7639ec94.css","55b60adee16cafaef912bd9f6f2df455"],["https://zlot.github.io/markcmitchell.net/static/js/main.39dd1f5e.js","35597c0793e5dc8bc700979fe1600bdf"],["https://zlot.github.io/markcmitchell.net/static/media/areYouEthical.e2e4ade2.jpg","e2e4ade2a03978f2cd586c3ef0ee5fd6"],["https://zlot.github.io/markcmitchell.net/static/media/designing4MobileInteraction.23ca4069.jpg","23ca40693bf4cf387d0fbb51fe0085ff"],["https://zlot.github.io/markcmitchell.net/static/media/exp1Fiire.8074f9b4.jpg","8074f9b421b0683e2394e6d54adbad4e"],["https://zlot.github.io/markcmitchell.net/static/media/fjordVibe.11066f8a.jpg","11066f8ae38cb17926fef669435bbadc"],["https://zlot.github.io/markcmitchell.net/static/media/graffitiMe.db4ace74.jpg","db4ace74fd81661c339f9751ed0f56f5"],["https://zlot.github.io/markcmitchell.net/static/media/monsterWorld.60745b09.jpg","60745b093e29d29bec70b5bc84442a1e"],["https://zlot.github.io/markcmitchell.net/static/media/pensivity.0fd82b3d.jpg","0fd82b3db2d2fc6cda92b655603a6143"],["https://zlot.github.io/markcmitchell.net/static/media/sydInteractiveArts.81a594d4.jpg","81a594d48aa90b4a2d022a60f4281114"],["https://zlot.github.io/markcmitchell.net/static/media/theCreators.e9e528e6.png","e9e528e666a93cca36f6757fe4bfaf55"],["https://zlot.github.io/markcmitchell.net/static/media/uobPaintingOfTheYear.b73b89ca.jpg","b73b89ca79a38ce6f3f4badf51918de1"],["https://zlot.github.io/markcmitchell.net/static/media/utsWall.10af5887.jpg","10af5887a3535ba65c090cd815caf770"],["https://zlot.github.io/markcmitchell.net/static/media/vividSydneyProp.0be32eb5.jpg","0be32eb5478ac8ad99109f28d0493bb8"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var r="https://zlot.github.io/markcmitchell.net/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});